{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "_owner", "type": "address", "internalType": "address" },
        { "name": "_wsteth", "type": "address", "internalType": "address" },
        {
          "name": "_mellowVault",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_weth", "type": "address", "internalType": "address" },
        {
          "name": "_feeRecipient",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_unlockTime", "type": "uint64", "internalType": "uint64" }
      ],
      "stateMutability": "nonpayable"
    },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "MELLOW_VAULT",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC4626" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WETH",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IWETH" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WSTETH",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC20" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "canWithdraw",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "currentAssetsOf",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "depositETHViaRouter",
      "inputs": [
        { "name": "router", "type": "address", "internalType": "address" },
        { "name": "swapCalldata", "type": "bytes", "internalType": "bytes" },
        { "name": "minWstOut", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositWstETH",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "feeBps",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "feeRecipient",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRouterAllowed",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "profitOf",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "int256", "internalType": "int256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setParams",
      "inputs": [
        {
          "name": "_feeRecipient",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_feeBps", "type": "uint16", "internalType": "uint16" },
        { "name": "_unlockTime", "type": "uint64", "internalType": "uint64" },
        {
          "name": "_withdrawalsEnabled",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRouterAllowed",
      "inputs": [
        { "name": "router", "type": "address", "internalType": "address" },
        { "name": "allowed", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unlockTime",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "userPrincipal",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "userShares",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdrawSplitToETH",
      "inputs": [
        {
          "name": "sharesToRedeem",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "router", "type": "address", "internalType": "address" },
        { "name": "swapCalldata", "type": "bytes", "internalType": "bytes" },
        { "name": "minEthOut", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawalsEnabled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "DepositedETH",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "router",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "ethIn",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "wstBought",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sharesOut",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DepositedWst",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "wstIn",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sharesOut",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ParamsUpdated",
      "inputs": [
        {
          "name": "feeRecipient",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "feeBps",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "unlockTime",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "withdrawalsEnabled",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RouterAllowed",
      "inputs": [
        {
          "name": "router",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "allowed",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawnToETH",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sharesIn",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "ethUser",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "ethFee",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2215:6383:0:-:0;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;-1:-1:-1;;;;;2215:6383:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2215:6383:0;;;;;;-1:-1:-1;;;;;2215:6383:0;1824:20;;2215:6383;;-1:-1:-1;2215:6383:0;;-1:-1:-1;;;;;;2215:6383:0;;;;;;;;;1890:40;-1:-1:-1;;1890:40:0;1448:1;2215:6383;;2470:4;2215:6383;;-1:-1:-1;;;;;2215:6383:0;;3542:21;;;;:51;;-1:-1:-1;3542:74:0;;;-1:-1:-1;3542:105:0;;;-1:-1:-1;2215:6383:0;;;-1:-1:-1;2215:6383:0;3667:24;-1:-1:-1;;;;;2215:6383:0;;;;3697:37;2215:6383;;;;3740:19;2215:6383;;;;-1:-1:-1;;;;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;;;;;2215:6383:0;;-1:-1:-1;;;2215:6383:0;2470:4;2215:6383;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;3542:105;-1:-1:-1;;;;;;2215:6383:0;;3620:27;;3542:105;;:74;-1:-1:-1;;;;;;2215:6383:0;;3597:19;;3542:74;;:51;-1:-1:-1;;;;;;2215:6383:0;;3567:26;;3542:51;;2215:6383;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;-1:-1:-1;2215:6383:0;;;;;;-1:-1:-1;2215:6383:0;;;;;-1:-1:-1;2215:6383:0;;;;-1:-1:-1;;;;;2215:6383:0;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c8063099476d0146114175780631fa0ee4414610be357806324a9d85314610bbe578063251c1aa314610b93578063290f253914610a2157806346904840146109f857806354198ce9146109cc578063604e85b91461066b57806361771e491461062c57806362dab626146105f35780636cc88edb1461055f578063866c01011461032957806389a64344146102e45780638da5cb5b146102bd578063ad5c464814610278578063b51459fe14610253578063d0dbcd241461022d578063d9fb643a146101e8578063de69b3aa146101af5763f2fde38b14610103575061000e565b346101ac5760203660031901126101ac5761011c61143b565b81546001600160a01b03811691610134338414611677565b6001600160a01b031691821561017a5782907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b03191617815580f35b60405162461bcd60e51b815260206004820152600a6024820152692d22a927afa7aba722a960b11b6044820152606490fd5b80fd5b50346101ac5760203660031901126101ac576020906040906001600160a01b036101d761143b565b168152600483522054604051908152f35b50346101ac57806003193601126101ac576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101ac57806003193601126101ac57602060ff60025460f01c166040519015158152f35b50346101ac57806003193601126101ac57602061026e61170e565b6040519015158152f35b50346101ac57806003193601126101ac576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101ac57806003193601126101ac57546040516001600160a01b039091168152602090f35b50346101ac57806003193601126101ac576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101ac5760203660031901126101ac5760043561034b600180541461156f565b6002600155801561052c576040516323b872dd60e01b815233600482015230602482015260448101829052602081606481867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156104ba5783916104fd575b50156104c557604051636e553f6560e01b815260048101829052306024820152602081604481866001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19081156104ba578391610483575b50338352600460205260408320610430828254611701565b9055338352600560205260408320610449838254611701565b905560405191825260208201527f776d73173002e44dc1f2aaed70d07890500e83089a9c21ef5d7e7ebf89250e3760403392a26001805580f35b90506020813d6020116104b2575b8161049e6020938361147f565b810103126104ad575138610418565b600080fd5b3d9150610491565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f1514905394d1915497d25397d190525360821b6044820152606490fd5b61051f915060203d602011610525575b610517818361147f565b81019061160c565b386103b7565b503d61050d565b60405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606490fd5b50346101ac5760403660031901126101ac5761057961143b565b602435908115158092036105ef577f5ae067a93e2af6193017728cb7e9ef5af1d750a5beb7b16a05b54d56f6f355e3916040916105c060018060a01b038654163314611677565b60018060a01b031690818552600360205282852060ff1981541660ff831617905582519182526020820152a180f35b8280fd5b50346101ac5760203660031901126101ac576020906040906001600160a01b0361061b61143b565b168152600583522054604051908152f35b50346101ac5760203660031901126101ac5760209060ff906040906001600160a01b0361065761143b565b168152600384522054166040519015158152f35b5060603660031901126101ac5761068061143b565b60243567ffffffffffffffff81116105ef576106a0903690600401611451565b91906106af600180541461156f565b60026001556001600160a01b038216808552600360205260408520549093906106da9060ff166115a8565b341561099c576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316939091869190602084602481895afa9384156104ba578394610964575b508293948160405192839283378101848152039134905af161075a611624565b501561092c576020602492604051938480926370a0823160e01b82523060048301525afa80156108ac5784906108f8575b61079592506115e9565b604435811015806108ef575b156108b757604051636e553f6560e01b81526004810182905230602482015290602082604481876001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19182156108ac578492610878575b5033845260046020526040842061081a838254611701565b9055338452600560205260408420610833828254611701565b9055604051928352346020840152604083015260608201527f7f2f45a11fb33879a148fe292bbe682a942ce069beac3d9ddd0f76fce037df2160803392a26001805580f35b9091506020813d6020116108a4575b816108946020938361147f565b810103126104ad57519038610802565b3d9150610887565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d3d55560821b6044820152606490fd5b508015156107a1565b506020823d602011610924575b816109126020938361147f565b810103126104ad57610795915161078b565b3d9150610905565b60405162461bcd60e51b815260206004820152601060248201526f1493d555115497d0d0531317d190525360821b6044820152606490fd5b925092506020823d602011610994575b816109816020938361147f565b810103126104ad5786928392519361073a565b3d9150610974565b60405162461bcd60e51b81526020600482015260086024820152670b48aa49ebe8aa8960c31b6044820152606490fd5b50346101ac5760203660031901126101ac5760206109f06109eb61143b565b6116af565b604051908152f35b50346101ac57806003193601126101ac576002546040516001600160a01b039091168152602090f35b50346101ac5760803660031901126101ac57610a3b61143b565b6024359061ffff8216808303610b8f576044359167ffffffffffffffff8316808403610b8b5760643591821515809303610b8757610a8360018060a01b038854163314611677565b6001600160a01b0316928315610b52576127108111610b1e577f5098e1fc2b4a89749ea05a9f13a8a5dab88233470a389fa292cd39a4aafee66a956080956002549160ff60f01b8660f01b16928760ff60f01b199161ffff60f01b1617169061ffff60a01b9060a01b16179067ffffffffffffffff60b01b9060b01b161717600255604051938452602084015260408301526060820152a180f35b60405162461bcd60e51b815260206004820152600c60248201526b08c8a8abea89e9ebe90928e960a31b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c2d22a927afa322a2afa0a2222960991b6044820152606490fd5b8680fd5b8580fd5b8380fd5b50346101ac57806003193601126101ac57602067ffffffffffffffff60025460b01c16604051908152f35b50346101ac57806003193601126101ac57602061ffff60025460a01c16604051908152f35b50346101ac5760803660031901126101ac576004356024356001600160a01b03811690818103610b8f5760443567ffffffffffffffff811161141357610c2d903690600401611451565b9092610c3c600180541461156f565b6002600155610c4961170e565b156113dc578086526003602052610c6660ff6040882054166115a8565b3386526004602052604086205492851515806113d2575b1561139a576040516370a0823160e01b8152306004820152927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602085602481845afa94851561138f578995611357575b50604051635d043b2960e11b81526004810189905230602482018190526044820152946020866064818d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1958615611227578a9661131f575b5085156112e8576040516370a0823160e01b815230600482015290602082602481865afa80156112dd578b906112a5575b610d7692506115e9565b948510611272578893604051636eb1769f60e11b8152306004820152816024820152602081604481865afa80156112675787918791611232575b50106110ec575b5050828094504796826040519384928337810182815203925af1610dd9611624565b50156110b457610de982476115e9565b918215610fb0575b5060643582101580610fa7575b15610f6b57610e24612710610e1c61ffff60025460a01c1685611664565b0480936115e9565b908480808085335af1610e35611624565b5015610f3657848080808660018060a01b03600254165af1610e55611624565b5015610f0257610e6584826115e9565b338652600560205260408620549033875260046020528060408820558015600014610ed957505050835b33855260056020526040852055604051928352602083015260408201527f48e4221d9a54d1188c4b73128e52b526c7e4c1d002899d7204f46f12f398c1d060603392a26001805580f35b610ee291611664565b8115610eee5704610e8f565b634e487b7160e01b86526012600452602486fd5b60405162461bcd60e51b815260206004820152600c60248201526b11551217d1915157d190525360a21b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c11551217d554d15497d1905253609a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273125394d551919250d251539517d1551217d3d55560621b6044820152606490fd5b50811515610dfe565b6040516370a0823160e01b815230600482015285907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602082602481845afa9182156104ba578392611080575b5081611015575b505050610df1565b809192939495503b156105ef57602483926040519485938492632e1a7d4d60e01b845260048401525af180156110755761105f575b5061105590476115e9565b903884818061100d565b9361106e81611055939661147f565b939061104a565b6040513d87823e3d90fd5b9091506020813d6020116110ac575b8161109c6020938361147f565b810103126105ef57519038611006565b3d915061108f565b60405162461bcd60e51b815260206004820152601060248201526f1493d555115497d4d5d05417d190525360821b6044820152606490fd5b919350919360405163095ea7b360e01b81528260048201528960248201526020816044818d885af1908115611227578a91611208575b50156111cf5760446020928a604051958694859363095ea7b360e01b8552600485015260248401525af19081156111c45787916111a5575b501561116a578186913880610db7565b60405162461bcd60e51b81526020600482015260136024820152721054141493d59157d493d555115497d1905253606a1b6044820152606490fd5b6111be915060203d60201161052557610517818361147f565b3861115a565b6040513d89823e3d90fd5b60405162461bcd60e51b81526020600482015260116024820152701054141493d59157d6915493d7d1905253607a1b6044820152606490fd5b611221915060203d60201161052557610517818361147f565b38611122565b6040513d8c823e3d90fd5b9150506020813d60201161125f575b8161124e6020938361147f565b81010312610b8b5786905138610db0565b3d9150611241565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152600b60248201526a5753545f4d495353494e4760a81b6044820152606490fd5b506020823d6020116112d5575b816112bf6020938361147f565b810103126112d157610d769151610d6c565b8a80fd5b3d91506112b2565b6040513d8d823e3d90fd5b60405162461bcd60e51b815260206004820152600f60248201526e16915493d7d054d4d15514d7d3d555608a1b6044820152606490fd5b9095506020813d60201161134f575b8161133b6020938361147f565b8101031261134b57519438610d3b565b8980fd5b3d915061132e565b9094506020813d602011611387575b816113736020938361147f565b8101031261138357519338610cd7565b8880fd5b3d9150611366565b6040513d8b823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f10905117d4d210549157d05353d5539560821b6044820152606490fd5b5083861115610c7d565b60405162461bcd60e51b815260206004820152600f60248201526e15d2551211149055d7d313d0d2d151608a1b6044820152606490fd5b8480fd5b50346101ac5760203660031901126101ac5760206109f061143661143b565b6114b7565b600435906001600160a01b03821682036104ad57565b9181601f840112156104ad5782359167ffffffffffffffff83116104ad57602083818601950101116104ad57565b90601f8019910116810190811067ffffffffffffffff8211176114a157604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b031660009081526004602052604090205480156115695760405163266d6a8360e11b815260048101919091526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561155d5760009161152e575090565b90506020813d602011611555575b816115496020938361147f565b810103126104ad575190565b3d915061153c565b6040513d6000823e3d90fd5b50600090565b1561157657565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b156115af57565b60405162461bcd60e51b81526020600482015260126024820152711493d555115497d393d517d0531313d5d15160721b6044820152606490fd5b919082039182116115f657565b634e487b7160e01b600052601160045260246000fd5b908160209103126104ad575180151581036104ad5790565b3d1561165f573d9067ffffffffffffffff82116114a15760405191611653601f8201601f19166020018461147f565b82523d6000602084013e565b606090565b818102929181159184041417156115f657565b1561167e57565b60405162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b6044820152606490fd5b6116b8816114b7565b6001600160a01b03909116600090815260056020526040902054808210156116f557906116e4916115e9565b600160ff1b81146115f65760000390565b6116fe916115e9565b90565b919082018092116115f657565b60025460ff8160f01c16908115611723575090565b67ffffffffffffffff915060b01c164210159056fea26469706673582212203228be4907bc5e68df9fee1a79e1c050d73f50101771cc626771c6f9e789f8d264736f6c634300081c0033",
    "sourceMap": "2215:6383:0:-:0;;;;;;;;;-1:-1:-1;2215:6383:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2215:6383:0;;;1732:41;1740:10;:19;;1732:41;:::i;:::-;-1:-1:-1;;;;;2215:6383:0;;2016:22;;2215:6383;;2064:37;;;;;;-1:-1:-1;;;;;;2215:6383:0;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;;;-1:-1:-1;;;;;2215:6383:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2283:32;-1:-1:-1;;;;;2215:6383:0;;;;;;;;;;;;;;;;;;;;;2558:33;2215:6383;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2370:30;-1:-1:-1;;;;;2215:6383:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2215:6383:0;;;;;;;;;;;;;;;;;;;;;;;2327:38;-1:-1:-1;;;;;2215:6383:0;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;1483:35;2215:6383;;;1491:12;1483:35;:::i;:::-;1534:1;2215:6383;;6152:10;;2215:6383;;;;-1:-1:-1;;;6192:54:0;;6212:10;2215:6383;6192:54;;2215:6383;6232:4;2215:6383;;;;;;;;;;;;6192:54;2215:6383;;6192:6;-1:-1:-1;;;;;2215:6383:0;6192:54;;;;;;;;;;;2215:6383;;;;;;;-1:-1:-1;;;6293:43:0;;2215:6383;6293:43;;2215:6383;;;6232:4;2215:6383;;;;;;;;;-1:-1:-1;;;;;6293:12:0;2215:6383;6293:43;;;;;;;;;;;2215:6383;6212:10;;2215:6383;;;;;;;;6342:35;2215:6383;;;6342:35;:::i;:::-;2215:6383;;6212:10;2215:6383;;6383:13;2215:6383;;;;;6383:35;2215:6383;;;6383:35;:::i;:::-;2215:6383;;;;;;;;;;;6429:43;2215:6383;6212:10;6429:43;;2215:6383;;;;;6293:43;;;2215:6383;6293:43;;2215:6383;6293:43;;;;;;2215:6383;6293:43;;;:::i;:::-;;;2215:6383;;;;;6293:43;;;2215:6383;-1:-1:-1;2215:6383:0;;6293:43;;;-1:-1:-1;6293:43:0;;;2215:6383;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;6192:54;;2215:6383;6192:54;;;;2215:6383;6192:54;2215:6383;6192:54;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;2215:6383;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;:::i;:::-;;;;;;;;;;;;4433:30;2215:6383;;;1732:41;2215:6383;;;;;;;;1740:10;:19;1732:41;:::i;:::-;2215:6383;;;;;;;;;;4389:15;2215:6383;;;;;;;;;;;;;;;;;;;;;;;;;4433:30;2215:6383;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;;;-1:-1:-1;;;;;2215:6383:0;;:::i;:::-;;;;2790:48;2215:6383;;;;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;;;;;-1:-1:-1;;;;;2215:6383:0;;:::i;:::-;;;;2621:47;2215:6383;;;;;;;;;;;;;;-1:-1:-1;2215:6383:0;;-1:-1:-1;;2215:6383:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;1483:35;2215:6383;;;1491:12;1483:35;:::i;:::-;1534:1;2215:6383;;-1:-1:-1;;;;;2215:6383:0;;;;;5349:15;2215:6383;;;;;;;;;5341:54;;2215:6383;;5341:54;:::i;:::-;5409:9;:13;2215:6383;;;;-1:-1:-1;;;5462:31:0;;5487:4;2215:6383;5462:31;;2215:6383;5462:6;-1:-1:-1;;;;;2215:6383:0;;;;;;;;;;;;5462:31;;;;;;;;;;;2215:6383;;;;;;;;;;;;;;;;;;5513:43;5409:9;;5513:43;;;;;:::i;:::-;;2215:6383;;;;;;;;;;;;;;;5618:31;;5487:4;2215:6383;5618:31;;2215:6383;5618:31;;;;;;;;;;2215:6383;5672:20;;;;:::i;:::-;2215:6383;;5706:19;;;:33;;;2215:6383;;;;;;-1:-1:-1;;;5787:43:0;;2215:6383;5787:43;;2215:6383;;;5487:4;2215:6383;;;;;;;;;;-1:-1:-1;;;;;5787:12:0;2215:6383;5787:43;;;;;;;;;;;2215:6383;5847:10;;2215:6383;;;;;;;;5836:35;2215:6383;;;5836:35;:::i;:::-;2215:6383;;5847:10;2215:6383;;5877:13;2215:6383;;;;;5877:35;2215:6383;;;5877:35;:::i;:::-;2215:6383;;;;;;;5409:9;2215:6383;;;;;;;;;;;;5924:62;2215:6383;5847:10;5924:62;;2215:6383;;;;;5787:43;;;;2215:6383;5787:43;;2215:6383;5787:43;;;;;;2215:6383;5787:43;;;:::i;:::-;;;2215:6383;;;;;5787:43;;;;;;;-1:-1:-1;5787:43:0;;;2215:6383;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;5706:33;5729:10;;;;5706:33;;5618:31;;2215:6383;5618:31;;2215:6383;5618:31;;;;;;2215:6383;5618:31;;;:::i;:::-;;;2215:6383;;;;5672:20;2215:6383;;5618:31;;;;;-1:-1:-1;5618:31:0;;2215:6383;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;5462:31;;;;;2215:6383;5462:31;;2215:6383;5462:31;;;;;;2215:6383;5462:31;;;:::i;:::-;;;2215:6383;;;;;;;;;5462:31;;;;;;-1:-1:-1;5462:31:0;;2215:6383;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2415:27;2215:6383;;;-1:-1:-1;;;;;2215:6383:0;;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:41;2215:6383;;;;;;;;1740:10;:19;1732:41;:::i;:::-;-1:-1:-1;;;;;2215:6383:0;;3992:27;;2215:6383;;4062:6;4051:17;;2215:6383;;4228:71;2215:6383;;;4091:28;2215:6383;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4091:28;2215:6383;;;;;;;;;;;;;;;;;;4228:71;2215:6383;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2502:25;2215:6383;;;;;;;;;;;;;;;;;;;;;;;;;2446:28;2215:6383;;;;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;;;-1:-1:-1;;;;;2215:6383:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1483:35;2215:6383;;;1491:12;1483:35;:::i;:::-;1534:1;2215:6383;;6679:13;;:::i;:::-;2215:6383;;;;;;6726:15;2215:6383;;6718:54;2215:6383;;;;;;6718:54;:::i;:::-;6807:10;2215:6383;;;;;;;;;6832:18;;;;:46;;;2215:6383;;;;;;-1:-1:-1;;;6926:31:0;;6951:4;2215:6383;6926:31;;2215:6383;;6926:6;-1:-1:-1;;;;;2215:6383:0;;;;;;6926:31;;;;;;;;;;;2215:6383;-1:-1:-1;2215:6383:0;;-1:-1:-1;;;6983:65:0;;2215:6383;6983:65;;2215:6383;;;6951:4;2215:6383;;;;;;;;;;;;;;;;6983:12;-1:-1:-1;;;;;2215:6383:0;6983:65;;;;;;;;;;;2215:6383;7062:13;;;2215:6383;;;;-1:-1:-1;;;7123:31:0;;6951:4;2215:6383;7123:31;;2215:6383;;;;;;7123:31;;;;;;;;;;;2215:6383;7123:43;;;;:::i;:::-;7180:24;;;2215:6383;;;;;;;;;7243:39;;6951:4;2215:6383;7243:39;;2215:6383;;;;;;;7243:39;2215:6383;7243:39;;;;;;;;;;;;;;2215:6383;7292:19;;7288:170;;2215:6383;7484:21;;;;;;;2215:6383;;;;;;;;;;;;;;7525:35;;;;;;:::i;:::-;;2215:6383;;;7622:33;:21;;:33;:::i;:::-;7666:13;;;7662:200;;2215:6383;;;;7875:21;;;:37;;;2215:6383;;;;8015:18;7984:6;7963:17;2215:6383;1534:1;2215:6383;;;;7963:17;;:::i;:::-;2215:6383;8015:18;;;:::i;:::-;6807:10;;;;;;;8054:45;;;;:::i;:::-;;2215:6383;;;;;;;;;;;;;1534:1;2215:6383;;8153:46;;;;:::i;:::-;;2215:6383;;;8265:23;;;;:::i;:::-;6807:10;2215:6383;;8314:13;2215:6383;;;;;;6807:10;;2215:6383;;;;;;;;;;8420:20;;8419:67;8420:20;;;8419:67;;;;;6807:10;2215:6383;;8314:13;2215:6383;;;;;;;;;;;;;;;;;;;8497:61;2215:6383;6807:10;8497:61;;2215:6383;;;;;8419:67;8449:27;;;:::i;:::-;2215:6383;;;;;8419:67;;2215:6383;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;7875:37;7900:12;;;;7875:37;;7662:200;2215:6383;;-1:-1:-1;;;7707:29:0;;6951:4;2215:6383;7707:29;;2215:6383;;;7707:4;-1:-1:-1;;;;;2215:6383:0;;;;;;7707:29;;;;;;;;;;;7662:200;7748:11;;7744:112;;7662:200;;;;;;7744:112;7771:22;;;;;;;;;;;2215:6383;;;;;;;;;;;;;7771:22;;2215:6383;7771:22;;2215:6383;7771:22;;;;;;;;7744:112;7814:21;:33;:21;;:33;:::i;:::-;7744:112;;;;;;;7771:22;;;;7814:33;7771:22;;;:::i;:::-;;;;;;2215:6383;;;;;;;;;7707:29;;;;2215:6383;7707:29;;2215:6383;7707:29;;;;;;2215:6383;7707:29;;;:::i;:::-;;;2215:6383;;;;;7707:29;;;;;;;-1:-1:-1;7707:29:0;;2215:6383;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;7288:170;2215:6383;;;;;;;;;;7329:25;;;2215:6383;7329:25;;2215:6383;;;;;;;7329:25;2215:6383;7329:25;;;;;;;;;;;;;;7288:170;2215:6383;;;;;;;;;;;;;;;;;;7392:35;;2215:6383;7392:35;;2215:6383;;;;;7392:35;;;;;;;;;;;7288:170;2215:6383;;;;7288:170;;;;;;;2215:6383;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;7392:35;;;;2215:6383;7392:35;2215:6383;7392:35;;;;;;;:::i;:::-;;;;;2215:6383;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;7329:25;;;;2215:6383;7329:25;2215:6383;7329:25;;;;;;;:::i;:::-;;;;;2215:6383;;;;;;;;;7243:39;;;;2215:6383;7243:39;;2215:6383;7243:39;;;;;;2215:6383;7243:39;;;:::i;:::-;;;2215:6383;;;;;;;7243:39;;;;;;-1:-1:-1;7243:39:0;;;2215:6383;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;7123:31;;2215:6383;7123:31;;2215:6383;7123:31;;;;;;2215:6383;7123:31;;;:::i;:::-;;;2215:6383;;;;7123:43;2215:6383;;7123:31;;2215:6383;;;;7123:31;;;-1:-1:-1;7123:31:0;;;2215:6383;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;6983:65;;;;2215:6383;6983:65;;2215:6383;6983:65;;;;;;2215:6383;6983:65;;;:::i;:::-;;;2215:6383;;;;;6983:65;;;;2215:6383;;;;6983:65;;;-1:-1:-1;6983:65:0;;6926:31;;;;2215:6383;6926:31;;2215:6383;6926:31;;;;;;2215:6383;6926:31;;;:::i;:::-;;;2215:6383;;;;;6926:31;;;;2215:6383;;;;6926:31;;;-1:-1:-1;6926:31:0;;;2215:6383;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;6832:46;6854:24;;;;;6832:46;;2215:6383;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2215:6383:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2215:6383:0;;;;;-1:-1:-1;2215:6383:0;4615:188;-1:-1:-1;;;;;2215:6383:0;;;;;4710:10;2215:6383;;;;;;4736:7;;4732:21;;2215:6383;;-1:-1:-1;;;4768:30:0;;4710:10;4768:30;;2215:6383;;;;;;4768:30;2215:6383;4768:12;-1:-1:-1;;;;;2215:6383:0;4768:30;;;;;;;2215:6383;4768:30;;;4759:39;4615:188;:::o;4768:30::-;;;2215:6383;4768:30;;2215:6383;4768:30;;;;;;2215:6383;4768:30;;;:::i;:::-;;;2215:6383;;;;;4615:188;:::o;4768:30::-;;;-1:-1:-1;4768:30:0;;;2215:6383;;;;;;;;;4732:21;4745:8;2215:6383;4745:8;:::o;2215:6383::-;;;;:::o;:::-;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2215:6383:0;;;;;:::i;:::-;;;;-1:-1:-1;2215:6383:0;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2215:6383:0;;;;;;;;;;;;-1:-1:-1;;;2215:6383:0;;;;;;;4807:261;4893:21;;;:::i;:::-;-1:-1:-1;;;;;2215:6383:0;;;;;;;4940:13;2215:6383;;;;;;4969:19;;;;4965:58;;5044:18;;;;:::i;:::-;-1:-1:-1;;;2215:6383:0;;;;;;4807:261;:::o;4965:58::-;5004:18;;;:::i;:::-;4990:33;:::o;2215:6383::-;;;;;;;;;;:::o;4492:119::-;4555:18;2215:6383;;;;;;4555:51;;;;;4548:58;4492:119;:::o;4555:51::-;2215:6383;;;;;;4577:15;:29;;4492:119;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "245": [
        { "start": 510, "length": 32 },
        { "start": 895, "length": 32 },
        { "start": 1781, "length": 32 },
        { "start": 3224, "length": 32 }
      ],
      "248": [
        { "start": 762, "length": 32 },
        { "start": 1000, "length": 32 },
        { "start": 2002, "length": 32 },
        { "start": 3331, "length": 32 },
        { "start": 5362, "length": 32 }
      ],
      "251": [
        { "start": 654, "length": 32 },
        { "start": 4039, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "MELLOW_VAULT()": "89a64344",
    "WETH()": "ad5c4648",
    "WSTETH()": "d9fb643a",
    "canWithdraw()": "b51459fe",
    "currentAssetsOf(address)": "099476d0",
    "depositETHViaRouter(address,bytes,uint256)": "604e85b9",
    "depositWstETH(uint256)": "866c0101",
    "feeBps()": "24a9d853",
    "feeRecipient()": "46904840",
    "isRouterAllowed(address)": "61771e49",
    "owner()": "8da5cb5b",
    "profitOf(address)": "54198ce9",
    "setParams(address,uint16,uint64,bool)": "290f2539",
    "setRouterAllowed(address,bool)": "6cc88edb",
    "transferOwnership(address)": "f2fde38b",
    "unlockTime()": "251c1aa3",
    "userPrincipal(address)": "62dab626",
    "userShares(address)": "de69b3aa",
    "withdrawSplitToETH(uint256,address,bytes,uint256)": "1fa0ee44",
    "withdrawalsEnabled()": "d0dbcd24"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wsteth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mellowVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_unlockTime\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wstBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesOut\",\"type\":\"uint256\"}],\"name\":\"DepositedETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wstIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesOut\",\"type\":\"uint256\"}],\"name\":\"DepositedWst\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"feeBps\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"unlockTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"withdrawalsEnabled\",\"type\":\"bool\"}],\"name\":\"ParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"RouterAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethUser\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethFee\",\"type\":\"uint256\"}],\"name\":\"WithdrawnToETH\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MELLOW_VAULT\",\"outputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WSTETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"currentAssetsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapCalldata\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"minWstOut\",\"type\":\"uint256\"}],\"name\":\"depositETHViaRouter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"depositWstETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRouterAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"profitOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_feeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"_unlockTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"_withdrawalsEnabled\",\"type\":\"bool\"}],\"name\":\"setParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setRouterAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userPrincipal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesToRedeem\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapCalldata\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"minEthOut\",\"type\":\"uint256\"}],\"name\":\"withdrawSplitToETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalsEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositETHViaRouter(address,bytes,uint256)\":{\"notice\":\"ETH in \\u2192 router swap (ETH\\u2192wstETH) \\u2192 ERC-4626 deposit; receiver = this, user gets internal shares credit.\"},\"depositWstETH(uint256)\":{\"notice\":\"Direct wstETH deposit (user must approve this contract for `assets` first).\"}},\"notice\":\"Lisk ETH \\u2192 wstETH \\u2192 Mellow wstETH Vault (ERC-4626) restaking vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/catmcgee/Documents/Work/hackathons/frogpay-contracts/contracts/SymbioticLiskETHVaultProxy.sol\":\"SymbioticLiskETHVaultProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=node_modules/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"/Users/catmcgee/Documents/Work/hackathons/frogpay-contracts/contracts/SymbioticLiskETHVaultProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IERC20 {\\n  function totalSupply() external view returns (uint256);\\n  function balanceOf(address) external view returns (uint256);\\n  function allowance(address owner, address spender) external view returns (uint256);\\n  function approve(address spender, uint256 value) external returns (bool);\\n  function transfer(address to, uint256 value) external returns (bool);\\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\\n  function decimals() external view returns (uint8);\\n}\\n\\ninterface IERC4626 {\\n  function asset() external view returns (address);\\n  function deposit(uint256 assets, address receiver) external returns (uint256 shares);\\n  function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\\n  function previewRedeem(uint256 shares) external view returns (uint256 assets);\\n  function previewDeposit(uint256 assets) external view returns (uint256 shares);\\n  function balanceOf(address) external view returns (uint256);\\n  function approve(address spender, uint256 value) external returns (bool);\\n}\\n\\ninterface IWETH {\\n  function deposit() external payable;\\n  function withdraw(uint256) external;\\n  function balanceOf(address) external view returns (uint256);\\n  function approve(address spender, uint256 value) external returns (bool);\\n}\\n\\nabstract contract ReentrancyGuard {\\n  uint256 private _status = 1;\\n  modifier nonReentrant() {\\n    require(_status == 1, \\\"REENTRANCY\\\");\\n    _status = 2;\\n    _;\\n    _status = 1;\\n  }\\n}\\n\\nabstract contract Ownable {\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n  address public owner;\\n  modifier onlyOwner() { require(msg.sender == owner, \\\"NOT_OWNER\\\"); _; }\\n  constructor(address _owner) {\\n    require(_owner != address(0), \\\"ZERO_OWNER\\\");\\n    owner = _owner;\\n    emit OwnershipTransferred(address(0), _owner);\\n  }\\n  function transferOwnership(address newOwner) external onlyOwner {\\n    require(newOwner != address(0), \\\"ZERO_OWNER\\\");\\n    emit OwnershipTransferred(owner, newOwner);\\n    owner = newOwner;\\n  }\\n}\\n\\n/**\\n * Lisk ETH \\u2192 wstETH \\u2192 Mellow wstETH Vault (ERC-4626) restaking vault.\\n */\\ncontract SymbioticLiskETHVaultProxy is Ownable, ReentrancyGuard {\\n  IERC20   public immutable WSTETH;        \\n  IERC4626 public immutable MELLOW_VAULT; \\n  IWETH    public immutable WETH;          \\n\\n  address public feeRecipient;\\n  uint16  public feeBps = 5000;            // 50% split\\n  uint64  public unlockTime;               // time gate\\n  bool    public withdrawalsEnabled;       // manual override\\n\\n  mapping(address => bool) public isRouterAllowed;\\n  mapping(address => uint256) public userShares;     // shares in ERC-4626 held by this contract, attributed per-user\\n  mapping(address => uint256) public userPrincipal;  // total wstETH assets deposited (scaled down on partial withdraws)\\n\\n  event RouterAllowed(address router, bool allowed);\\n  event ParamsUpdated(address feeRecipient, uint16 feeBps, uint64 unlockTime, bool withdrawalsEnabled);\\n  event DepositedETH(address indexed user, address router, uint256 ethIn, uint256 wstBought, uint256 sharesOut);\\n  event DepositedWst(address indexed user, uint256 wstIn, uint256 sharesOut);\\n  event WithdrawnToETH(address indexed user, uint256 sharesIn, uint256 ethUser, uint256 ethFee);\\n\\n  constructor(\\n    address _owner,\\n    address _wsteth,\\n    address _mellowVault,\\n    address _weth,\\n    address _feeRecipient,\\n    uint64  _unlockTime\\n  ) Ownable(_owner) {\\n    require(_wsteth != address(0) && _mellowVault != address(0) && _weth != address(0) && _feeRecipient != address(0), \\\"ZERO_ADDR\\\");\\n    WSTETH = IERC20(_wsteth);\\n    MELLOW_VAULT = IERC4626(_mellowVault);\\n    WETH = IWETH(_weth);\\n    feeRecipient = _feeRecipient;\\n    unlockTime = _unlockTime;\\n  \\n  }\\n\\n  // --- admin ---\\n\\n  function setParams(address _feeRecipient, uint16 _feeBps, uint64 _unlockTime, bool _withdrawalsEnabled) external onlyOwner {\\n    require(_feeRecipient != address(0), \\\"ZERO_FEE_ADDR\\\");\\n    require(_feeBps <= 10_000, \\\"FEE_TOO_HIGH\\\");\\n    feeRecipient = _feeRecipient;\\n    feeBps = _feeBps;\\n    unlockTime = _unlockTime;\\n    withdrawalsEnabled = _withdrawalsEnabled;\\n    emit ParamsUpdated(_feeRecipient, _feeBps, _unlockTime, _withdrawalsEnabled);\\n  }\\n\\n  function setRouterAllowed(address router, bool allowed) external onlyOwner {\\n    isRouterAllowed[router] = allowed;\\n    emit RouterAllowed(router, allowed);\\n  }\\n\\n  // --- views ---\\n\\n  function canWithdraw() public view returns (bool) {\\n    return withdrawalsEnabled || block.timestamp >= unlockTime;\\n  }\\n\\n  function currentAssetsOf(address user) public view returns (uint256 assets) {\\n    uint256 sh = userShares[user];\\n    if (sh == 0) return 0;\\n    assets = MELLOW_VAULT.previewRedeem(sh);\\n  }\\n\\n  function profitOf(address user) external view returns (int256) {\\n    uint256 assets = currentAssetsOf(user);\\n    uint256 principal = userPrincipal[user];\\n    if (assets >= principal) return int256(assets - principal);\\n    return -int256(principal - assets);\\n  }\\n\\n  // --- deposits ---\\n\\n  /// ETH in \\u2192 router swap (ETH\\u2192wstETH) \\u2192 ERC-4626 deposit; receiver = this, user gets internal shares credit.\\n  function depositETHViaRouter(address router, bytes calldata swapCalldata, uint256 minWstOut) external payable nonReentrant {\\n    require(isRouterAllowed[router], \\\"ROUTER_NOT_ALLOWED\\\");\\n    require(msg.value > 0, \\\"ZERO_ETH\\\");\\n\\n    uint256 wstBefore = WSTETH.balanceOf(address(this));\\n    (bool ok, ) = router.call{value: msg.value}(swapCalldata);\\n    require(ok, \\\"ROUTER_CALL_FAIL\\\");\\n    uint256 wstAfter = WSTETH.balanceOf(address(this));\\n    uint256 bought = wstAfter - wstBefore;\\n    require(bought >= minWstOut && bought > 0, \\\"INSUFFICIENT_OUT\\\");\\n\\n    uint256 sharesOut = MELLOW_VAULT.deposit(bought, address(this));\\n    userShares[msg.sender] += sharesOut;\\n    userPrincipal[msg.sender] += bought;\\n\\n    emit DepositedETH(msg.sender, router, msg.value, bought, sharesOut);\\n  }\\n\\n  /// Direct wstETH deposit (user must approve this contract for `assets` first).\\n  function depositWstETH(uint256 assets) external nonReentrant {\\n    require(assets > 0, \\\"ZERO_ASSETS\\\");\\n    require(WSTETH.transferFrom(msg.sender, address(this), assets), \\\"TRANSFER_IN_FAIL\\\");\\n    uint256 sharesOut = MELLOW_VAULT.deposit(assets, address(this));\\n    userShares[msg.sender] += sharesOut;\\n    userPrincipal[msg.sender] += assets;\\n    emit DepositedWst(msg.sender, assets, sharesOut);\\n  }\\n\\n  // --- withdrawals ---\\n\\n  function withdrawSplitToETH(\\n    uint256 sharesToRedeem,\\n    address router,\\n    bytes calldata swapCalldata,\\n    uint256 minEthOut\\n  ) external nonReentrant {\\n    require(canWithdraw(), \\\"WITHDRAW_LOCKED\\\");\\n    require(isRouterAllowed[router], \\\"ROUTER_NOT_ALLOWED\\\");\\n\\n    uint256 userSh = userShares[msg.sender];\\n    require(sharesToRedeem > 0 && sharesToRedeem <= userSh, \\\"BAD_SHARE_AMOUNT\\\");\\n\\n    uint256 wstBefore = WSTETH.balanceOf(address(this));\\n    uint256 assetsOut = MELLOW_VAULT.redeem(sharesToRedeem, address(this), address(this));\\n    require(assetsOut > 0, \\\"ZERO_ASSETS_OUT\\\");\\n    uint256 wstReceived = WSTETH.balanceOf(address(this)) - wstBefore;\\n    require(wstReceived >= assetsOut, \\\"WST_MISSING\\\");\\n\\n    uint256 allow = WSTETH.allowance(address(this), router);\\n    if (allow < wstReceived) {\\n      require(WSTETH.approve(router, 0), \\\"APPROVE_ZERO_FAIL\\\");\\n      require(WSTETH.approve(router, wstReceived), \\\"APPROVE_ROUTER_FAIL\\\");\\n    }\\n\\n    uint256 ethBefore = address(this).balance;\\n    (bool ok, ) = router.call{value: 0}(swapCalldata);\\n    require(ok, \\\"ROUTER_SWAP_FAIL\\\");\\n    uint256 ethDelta = address(this).balance - ethBefore;\\n\\n    if (ethDelta == 0) {\\n      uint256 wethBal = WETH.balanceOf(address(this));\\n      if (wethBal > 0) {\\n        WETH.withdraw(wethBal);\\n        ethDelta = address(this).balance - ethBefore;\\n      }\\n    }\\n    require(ethDelta >= minEthOut && ethDelta > 0, \\\"INSUFFICIENT_ETH_OUT\\\");\\n\\n    uint256 feePart = (ethDelta * feeBps) / 10_000;\\n    uint256 userPart = ethDelta - feePart;\\n\\n    (bool s1, ) = payable(msg.sender).call{value: userPart}(\\\"\\\");\\n    require(s1, \\\"ETH_USER_FAIL\\\");\\n    (bool s2, ) = payable(feeRecipient).call{value: feePart}(\\\"\\\");\\n    require(s2, \\\"ETH_FEE_FAIL\\\");\\n\\n    uint256 remainingShares = userSh - sharesToRedeem;\\n    uint256 principal = userPrincipal[msg.sender];\\n    userShares[msg.sender] = remainingShares;\\n    userPrincipal[msg.sender] = (remainingShares == 0) ? 0 : (principal * remainingShares) / userSh;\\n    emit WithdrawnToETH(msg.sender, sharesToRedeem, userPart, feePart);\\n  }\\n\\n  receive() external payable {}\\n}\\n\",\"keccak256\":\"0x32fdbf0a1b73f99a5b01c57a007ba48ce32925034a516d819dbb47e22400153d\",\"license\":\"MIT\"}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_owner", "type": "address" },
            { "internalType": "address", "name": "_wsteth", "type": "address" },
            {
              "internalType": "address",
              "name": "_mellowVault",
              "type": "address"
            },
            { "internalType": "address", "name": "_weth", "type": "address" },
            {
              "internalType": "address",
              "name": "_feeRecipient",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "_unlockTime",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "router",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "ethIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "wstBought",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "sharesOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositedETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "wstIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "sharesOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositedWst",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "feeBps",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "unlockTime",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "withdrawalsEnabled",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ParamsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RouterAllowed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sharesIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "ethUser",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "ethFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawnToETH",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MELLOW_VAULT",
          "outputs": [
            {
              "internalType": "contract IERC4626",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            { "internalType": "contract IWETH", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WSTETH",
          "outputs": [
            { "internalType": "contract IERC20", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentAssetsOf",
          "outputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "router", "type": "address" },
            {
              "internalType": "bytes",
              "name": "swapCalldata",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "minWstOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositETHViaRouter"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositWstETH"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeBps",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRecipient",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRouterAllowed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "profitOf",
          "outputs": [
            { "internalType": "int256", "name": "", "type": "int256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeRecipient",
              "type": "address"
            },
            { "internalType": "uint16", "name": "_feeBps", "type": "uint16" },
            {
              "internalType": "uint64",
              "name": "_unlockTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "_withdrawalsEnabled",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setParams"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "router", "type": "address" },
            { "internalType": "bool", "name": "allowed", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRouterAllowed"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unlockTime",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userPrincipal",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userShares",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "sharesToRedeem",
              "type": "uint256"
            },
            { "internalType": "address", "name": "router", "type": "address" },
            {
              "internalType": "bytes",
              "name": "swapCalldata",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "minEthOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawSplitToETH"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawalsEnabled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": {
        "kind": "user",
        "methods": {
          "depositETHViaRouter(address,bytes,uint256)": {
            "notice": "ETH in → router swap (ETH→wstETH) → ERC-4626 deposit; receiver = this, user gets internal shares credit."
          },
          "depositWstETH(uint256)": {
            "notice": "Direct wstETH deposit (user must approve this contract for `assets` first)."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "useLiteralContent": true, "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "/Users/catmcgee/Documents/Work/hackathons/frogpay-contracts/contracts/SymbioticLiskETHVaultProxy.sol": "SymbioticLiskETHVaultProxy"
      },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "/Users/catmcgee/Documents/Work/hackathons/frogpay-contracts/contracts/SymbioticLiskETHVaultProxy.sol": {
        "keccak256": "0x32fdbf0a1b73f99a5b01c57a007ba48ce32925034a516d819dbb47e22400153d",
        "urls": [],
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IERC20 {\n  function totalSupply() external view returns (uint256);\n  function balanceOf(address) external view returns (uint256);\n  function allowance(address owner, address spender) external view returns (uint256);\n  function approve(address spender, uint256 value) external returns (bool);\n  function transfer(address to, uint256 value) external returns (bool);\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\n  function decimals() external view returns (uint8);\n}\n\ninterface IERC4626 {\n  function asset() external view returns (address);\n  function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n  function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\n  function previewRedeem(uint256 shares) external view returns (uint256 assets);\n  function previewDeposit(uint256 assets) external view returns (uint256 shares);\n  function balanceOf(address) external view returns (uint256);\n  function approve(address spender, uint256 value) external returns (bool);\n}\n\ninterface IWETH {\n  function deposit() external payable;\n  function withdraw(uint256) external;\n  function balanceOf(address) external view returns (uint256);\n  function approve(address spender, uint256 value) external returns (bool);\n}\n\nabstract contract ReentrancyGuard {\n  uint256 private _status = 1;\n  modifier nonReentrant() {\n    require(_status == 1, \"REENTRANCY\");\n    _status = 2;\n    _;\n    _status = 1;\n  }\n}\n\nabstract contract Ownable {\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n  address public owner;\n  modifier onlyOwner() { require(msg.sender == owner, \"NOT_OWNER\"); _; }\n  constructor(address _owner) {\n    require(_owner != address(0), \"ZERO_OWNER\");\n    owner = _owner;\n    emit OwnershipTransferred(address(0), _owner);\n  }\n  function transferOwnership(address newOwner) external onlyOwner {\n    require(newOwner != address(0), \"ZERO_OWNER\");\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\n/**\n * Lisk ETH → wstETH → Mellow wstETH Vault (ERC-4626) restaking vault.\n */\ncontract SymbioticLiskETHVaultProxy is Ownable, ReentrancyGuard {\n  IERC20   public immutable WSTETH;        \n  IERC4626 public immutable MELLOW_VAULT; \n  IWETH    public immutable WETH;          \n\n  address public feeRecipient;\n  uint16  public feeBps = 5000;            // 50% split\n  uint64  public unlockTime;               // time gate\n  bool    public withdrawalsEnabled;       // manual override\n\n  mapping(address => bool) public isRouterAllowed;\n  mapping(address => uint256) public userShares;     // shares in ERC-4626 held by this contract, attributed per-user\n  mapping(address => uint256) public userPrincipal;  // total wstETH assets deposited (scaled down on partial withdraws)\n\n  event RouterAllowed(address router, bool allowed);\n  event ParamsUpdated(address feeRecipient, uint16 feeBps, uint64 unlockTime, bool withdrawalsEnabled);\n  event DepositedETH(address indexed user, address router, uint256 ethIn, uint256 wstBought, uint256 sharesOut);\n  event DepositedWst(address indexed user, uint256 wstIn, uint256 sharesOut);\n  event WithdrawnToETH(address indexed user, uint256 sharesIn, uint256 ethUser, uint256 ethFee);\n\n  constructor(\n    address _owner,\n    address _wsteth,\n    address _mellowVault,\n    address _weth,\n    address _feeRecipient,\n    uint64  _unlockTime\n  ) Ownable(_owner) {\n    require(_wsteth != address(0) && _mellowVault != address(0) && _weth != address(0) && _feeRecipient != address(0), \"ZERO_ADDR\");\n    WSTETH = IERC20(_wsteth);\n    MELLOW_VAULT = IERC4626(_mellowVault);\n    WETH = IWETH(_weth);\n    feeRecipient = _feeRecipient;\n    unlockTime = _unlockTime;\n  \n  }\n\n  // --- admin ---\n\n  function setParams(address _feeRecipient, uint16 _feeBps, uint64 _unlockTime, bool _withdrawalsEnabled) external onlyOwner {\n    require(_feeRecipient != address(0), \"ZERO_FEE_ADDR\");\n    require(_feeBps <= 10_000, \"FEE_TOO_HIGH\");\n    feeRecipient = _feeRecipient;\n    feeBps = _feeBps;\n    unlockTime = _unlockTime;\n    withdrawalsEnabled = _withdrawalsEnabled;\n    emit ParamsUpdated(_feeRecipient, _feeBps, _unlockTime, _withdrawalsEnabled);\n  }\n\n  function setRouterAllowed(address router, bool allowed) external onlyOwner {\n    isRouterAllowed[router] = allowed;\n    emit RouterAllowed(router, allowed);\n  }\n\n  // --- views ---\n\n  function canWithdraw() public view returns (bool) {\n    return withdrawalsEnabled || block.timestamp >= unlockTime;\n  }\n\n  function currentAssetsOf(address user) public view returns (uint256 assets) {\n    uint256 sh = userShares[user];\n    if (sh == 0) return 0;\n    assets = MELLOW_VAULT.previewRedeem(sh);\n  }\n\n  function profitOf(address user) external view returns (int256) {\n    uint256 assets = currentAssetsOf(user);\n    uint256 principal = userPrincipal[user];\n    if (assets >= principal) return int256(assets - principal);\n    return -int256(principal - assets);\n  }\n\n  // --- deposits ---\n\n  /// ETH in → router swap (ETH→wstETH) → ERC-4626 deposit; receiver = this, user gets internal shares credit.\n  function depositETHViaRouter(address router, bytes calldata swapCalldata, uint256 minWstOut) external payable nonReentrant {\n    require(isRouterAllowed[router], \"ROUTER_NOT_ALLOWED\");\n    require(msg.value > 0, \"ZERO_ETH\");\n\n    uint256 wstBefore = WSTETH.balanceOf(address(this));\n    (bool ok, ) = router.call{value: msg.value}(swapCalldata);\n    require(ok, \"ROUTER_CALL_FAIL\");\n    uint256 wstAfter = WSTETH.balanceOf(address(this));\n    uint256 bought = wstAfter - wstBefore;\n    require(bought >= minWstOut && bought > 0, \"INSUFFICIENT_OUT\");\n\n    uint256 sharesOut = MELLOW_VAULT.deposit(bought, address(this));\n    userShares[msg.sender] += sharesOut;\n    userPrincipal[msg.sender] += bought;\n\n    emit DepositedETH(msg.sender, router, msg.value, bought, sharesOut);\n  }\n\n  /// Direct wstETH deposit (user must approve this contract for `assets` first).\n  function depositWstETH(uint256 assets) external nonReentrant {\n    require(assets > 0, \"ZERO_ASSETS\");\n    require(WSTETH.transferFrom(msg.sender, address(this), assets), \"TRANSFER_IN_FAIL\");\n    uint256 sharesOut = MELLOW_VAULT.deposit(assets, address(this));\n    userShares[msg.sender] += sharesOut;\n    userPrincipal[msg.sender] += assets;\n    emit DepositedWst(msg.sender, assets, sharesOut);\n  }\n\n  // --- withdrawals ---\n\n  function withdrawSplitToETH(\n    uint256 sharesToRedeem,\n    address router,\n    bytes calldata swapCalldata,\n    uint256 minEthOut\n  ) external nonReentrant {\n    require(canWithdraw(), \"WITHDRAW_LOCKED\");\n    require(isRouterAllowed[router], \"ROUTER_NOT_ALLOWED\");\n\n    uint256 userSh = userShares[msg.sender];\n    require(sharesToRedeem > 0 && sharesToRedeem <= userSh, \"BAD_SHARE_AMOUNT\");\n\n    uint256 wstBefore = WSTETH.balanceOf(address(this));\n    uint256 assetsOut = MELLOW_VAULT.redeem(sharesToRedeem, address(this), address(this));\n    require(assetsOut > 0, \"ZERO_ASSETS_OUT\");\n    uint256 wstReceived = WSTETH.balanceOf(address(this)) - wstBefore;\n    require(wstReceived >= assetsOut, \"WST_MISSING\");\n\n    uint256 allow = WSTETH.allowance(address(this), router);\n    if (allow < wstReceived) {\n      require(WSTETH.approve(router, 0), \"APPROVE_ZERO_FAIL\");\n      require(WSTETH.approve(router, wstReceived), \"APPROVE_ROUTER_FAIL\");\n    }\n\n    uint256 ethBefore = address(this).balance;\n    (bool ok, ) = router.call{value: 0}(swapCalldata);\n    require(ok, \"ROUTER_SWAP_FAIL\");\n    uint256 ethDelta = address(this).balance - ethBefore;\n\n    if (ethDelta == 0) {\n      uint256 wethBal = WETH.balanceOf(address(this));\n      if (wethBal > 0) {\n        WETH.withdraw(wethBal);\n        ethDelta = address(this).balance - ethBefore;\n      }\n    }\n    require(ethDelta >= minEthOut && ethDelta > 0, \"INSUFFICIENT_ETH_OUT\");\n\n    uint256 feePart = (ethDelta * feeBps) / 10_000;\n    uint256 userPart = ethDelta - feePart;\n\n    (bool s1, ) = payable(msg.sender).call{value: userPart}(\"\");\n    require(s1, \"ETH_USER_FAIL\");\n    (bool s2, ) = payable(feeRecipient).call{value: feePart}(\"\");\n    require(s2, \"ETH_FEE_FAIL\");\n\n    uint256 remainingShares = userSh - sharesToRedeem;\n    uint256 principal = userPrincipal[msg.sender];\n    userShares[msg.sender] = remainingShares;\n    userPrincipal[msg.sender] = (remainingShares == 0) ? 0 : (principal * remainingShares) / userSh;\n    emit WithdrawnToETH(msg.sender, sharesToRedeem, userPart, feePart);\n  }\n\n  receive() external payable {}\n}\n",
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 0
}
